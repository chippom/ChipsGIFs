const { createClient } = require('@supabase/supabase-js');
const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

exports.handler = async (event) => {
  try {
    const { gif_name } = JSON.parse(event.body);

    // 1. Get current count for this gif_name (if it exists)
    const { data: existing, error: selectError } = await supabase
      .from('download_counters')
      .select('count')
      .eq('gif_name', gif_name)
      .single();

    if (selectError && selectError.code !== 'PGRST116') {
      throw selectError;
    }

    const newCount = (existing?.count || 0) + 1;

    // 2. Upsert (insert if new, update if exists)
    const { data, error } = await supabase
      .from('download_counters')
      .upsert(
        [{ gif_name, count: newCount }],
        { onConflict: 'gif_name' }
      )
      .select();

    if (error) {
      throw error;
    }

    return {
      statusCode: 200,
      body: JSON.stringify({ count: data[0].count }),
    };

  } catch (error) {
    return {
      statusCode: 500,
      body: JSON.stringify({ error: error.message }),
    };
  }
};
